AWSTemplateFormatVersion: '2010-09-09'
Description: Zabbixserver for Redundant

Parameters:
  NewKey:
    Type: String
    Default: Zabbix-Key
    Description: NewKey for EC2 Instance
  
  InstanceName: 
    Type: String
    Default: Zabbix-server
    Description: EC2 InstanceName for Zabbix-server

Resources:
  #VPC 作成
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: MyVPC

  #PublicSubnet1 作成
  MySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.10.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name 
          Value: MySubnet1
  
  #PublicSubnet2作成
  MySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.20.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name 
          Value: MySubnet2
  

  #Internet Gateway 作成
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: MyInternetGateway

  #Attach InternetGateway to VPC
  MyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway
  
  #RouteTable作成
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref MyVPC 
      Tags: 
      - Key: Name
        Value: MyRouteTable

  #Route to InternetGateway
  MyRoute: 
    Type: AWS::EC2::Route 
    Properties: 
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway 

  #RouteTableをMySubnet1にアタッチ
  MySubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref MySubnet1
      RouteTableId: !Ref MyRouteTable 
  
  #RouteTableをMySubnet2にアタッチ
  MySubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref MySubnet2
      RouteTableId: !Ref MyRouteTable 


  #EC2インスタンス関連
  #Security Group for EC2 作成
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup 
    Properties:
      GroupDescription: Enable HTTP and HTTPS
      VpcId: !Ref MyVPC
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrBlock: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  #Elastic Ip 作成
  ZabbixEIP:
    Type: AWS::EC2::EIP 
    Properties:
      Domain: vpc 
  
  #KeyPair作成
  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties: 
      KeyName: !Ref NewKey

  #EC2 Instance for Zabbixserver
  ZabbixInstance:
    Type: AWS::EC2::Instance 
    Properties: 
      KeyName: !Ref KeyPair
      Tags:
        - Key: Name 
          Value: !Ref InstanceName
        - Key: shift 
          Value: day
        - Key: exclude_from_shutdown
          Value: 'True'
      InstanceType: t3.small
      ImageId: ami-0decf30d0aa217e25 #購読したAlmaLinuxのAMI ID
      SecurityGroupIds:
        - !Ref EC2SecurityGroup 
      IamInstanceProfile: !Ref EC2InstanceProfile
      SubnetId: !Ref MySubnet1

  #Associate Elastic IP with EC2 Instance
  ZabbixEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties: 
      InstanceId: !Ref ZabbixInstance
      EIP:  !Ref ZabbixEIP  

  #IAM Role for CloudFormation Execution
  CloudFormationExecution: 
    Type: AWS::IAM::Role
    Properties: 
      RoleName: CloudFormationExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AdministratorAccess #管理者権限を追加

  # IAM Role for EC2 Instance
  EC2InstanceRole: 
    Type: AWS::IAM::Role 
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow 
            Principal: 
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole 
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore  # セッションマネージャー許可権限
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess      # EC2読み取り権限
      Policies:
        - PolicyName: EC2RunInstancesPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:RunInstances
                  - ec2:CreateTags
                Resource: "*"
      RoleName: EC2InstanceRole


  #IAM ROle Association
  EC2InstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref EC2InstanceRole 